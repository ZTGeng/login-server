var crypto = require('crypto'); 
var rand = require('csprng'); 
var mongoose = require('mongoose'); 
var user = require('config/models');    


exports.register = function(email, password, username, role, callback) {  

    var x = email; 
    //if(!(x.indexOf("@")=x.length)){ 
    if(1==1){ 
        //if (password.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/) && password.length > 4 && password.match(/[0-9]/) && password.match(/.[!,@,#,$,%,^,&,*,?,_,~]/)) {  
        if (1==1) {

            var temp = rand(160, 36); 
            var newpass = temp + password; 
            var token = crypto.createHash('sha512').update(email +rand).digest("hex"); 
            var hashed_password = crypto.createHash('sha512').update(newpass).digest("hex");  

            var newuser = new user({    
                token: token,   
                email: email,   
                hashed_password: hashed_password,   
                salt: temp,
                username: username,
                role: role,
                rate: 5,
                gcm_token: '',
                friends: []
            });  

            user.find({email: email}, function(err, users){  

                var len = users.length;  
                if(len == 0){
                    user.find({username: username}, function(err, users2){
                        var len2 = users2.length;
                        if (len2 == 0) {
                            newuser.save(function (err) {   
                                callback({'response':"Sucessfully Registered"});  
                            });
                        } else {
                            callback({'response':"Username already Used"});  
                        }
                    });   
                } else {    
                    callback({'response':"Email already Registered"});  
                }
            });
        } else {      
            callback({'response':"Password Weak"});  
        }
    } else {    
        callback({'response':"Email Not Valid"});  
    } 
} 

